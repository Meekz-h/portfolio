import { execa as _execa } from 'execa';
import { executeWithDebugLogger } from './execute_with_logger.js';
/**
 *
 */
export class NpmPackageManagerController {
    projectRoot;
    execa;
    /**
     * Abstraction around npm commands that are needed to initialize a project and install dependencies
     */
    constructor(projectRoot, execa = _execa) {
        this.projectRoot = projectRoot;
        this.execa = execa;
    }
    /**
     * Installs the given package names as devDependencies
     */
    installDependencies = async (packageNames, type) => {
        const args = ['install'].concat(...packageNames);
        const typeDev = type === 'dev';
        if (typeDev) {
            args.push('--save-dev');
        }
        try {
            await executeWithDebugLogger(this.projectRoot, 'npm', args, this.execa);
        }
        catch {
            throw new Error(`\`npm ${args.join(' ')}\` did not exit successfully.`);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBtX3BhY2thZ2VfbWFuYWdlcl9jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL25wbV9wYWNrYWdlX21hbmFnZXJfY29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxJQUFJLE1BQU0sRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUt4QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVsRTs7R0FFRztBQUNILE1BQU0sT0FBTywyQkFBMkI7SUFLbkI7SUFDQTtJQUxuQjs7T0FFRztJQUNILFlBQ21CLFdBQW1CLEVBQ25CLFFBQVEsTUFBTTtRQURkLGdCQUFXLEdBQVgsV0FBVyxDQUFRO1FBQ25CLFVBQUssR0FBTCxLQUFLLENBQVM7SUFDOUIsQ0FBQztJQUVKOztPQUVHO0lBQ0gsbUJBQW1CLEdBQUcsS0FBSyxFQUN6QixZQUFzQixFQUN0QixJQUFvQixFQUNMLEVBQUU7UUFDakIsTUFBTSxJQUFJLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxZQUFZLENBQUMsQ0FBQztRQUNqRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEtBQUssS0FBSyxDQUFDO1FBQy9CLElBQUksT0FBTyxFQUFFO1lBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUN6QjtRQUVELElBQUk7WUFDRixNQUFNLHNCQUFzQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDekU7UUFBQyxNQUFNO1lBQ04sTUFBTSxJQUFJLEtBQUssQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDLENBQUM7U0FDekU7SUFDSCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4ZWNhIGFzIF9leGVjYSB9IGZyb20gJ2V4ZWNhJztcbmltcG9ydCB7XG4gIERlcGVuZGVuY3lUeXBlLFxuICBQYWNrYWdlTWFuYWdlckNvbnRyb2xsZXIsXG59IGZyb20gJy4vcGFja2FnZV9tYW5hZ2VyX2NvbnRyb2xsZXIuanMnO1xuaW1wb3J0IHsgZXhlY3V0ZVdpdGhEZWJ1Z0xvZ2dlciB9IGZyb20gJy4vZXhlY3V0ZV93aXRoX2xvZ2dlci5qcyc7XG5cbi8qKlxuICpcbiAqL1xuZXhwb3J0IGNsYXNzIE5wbVBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlciBpbXBsZW1lbnRzIFBhY2thZ2VNYW5hZ2VyQ29udHJvbGxlciB7XG4gIC8qKlxuICAgKiBBYnN0cmFjdGlvbiBhcm91bmQgbnBtIGNvbW1hbmRzIHRoYXQgYXJlIG5lZWRlZCB0byBpbml0aWFsaXplIGEgcHJvamVjdCBhbmQgaW5zdGFsbCBkZXBlbmRlbmNpZXNcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgcHJvamVjdFJvb3Q6IHN0cmluZyxcbiAgICBwcml2YXRlIHJlYWRvbmx5IGV4ZWNhID0gX2V4ZWNhXG4gICkge31cblxuICAvKipcbiAgICogSW5zdGFsbHMgdGhlIGdpdmVuIHBhY2thZ2UgbmFtZXMgYXMgZGV2RGVwZW5kZW5jaWVzXG4gICAqL1xuICBpbnN0YWxsRGVwZW5kZW5jaWVzID0gYXN5bmMgKFxuICAgIHBhY2thZ2VOYW1lczogc3RyaW5nW10sXG4gICAgdHlwZTogRGVwZW5kZW5jeVR5cGVcbiAgKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gICAgY29uc3QgYXJncyA9IFsnaW5zdGFsbCddLmNvbmNhdCguLi5wYWNrYWdlTmFtZXMpO1xuICAgIGNvbnN0IHR5cGVEZXYgPSB0eXBlID09PSAnZGV2JztcbiAgICBpZiAodHlwZURldikge1xuICAgICAgYXJncy5wdXNoKCctLXNhdmUtZGV2Jyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGV4ZWN1dGVXaXRoRGVidWdMb2dnZXIodGhpcy5wcm9qZWN0Um9vdCwgJ25wbScsIGFyZ3MsIHRoaXMuZXhlY2EpO1xuICAgIH0gY2F0Y2gge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBcXGBucG0gJHthcmdzLmpvaW4oJyAnKX1cXGAgZGlkIG5vdCBleGl0IHN1Y2Nlc3NmdWxseS5gKTtcbiAgICB9XG4gIH07XG59XG4iXX0=