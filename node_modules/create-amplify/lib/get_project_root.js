import fsp from 'fs/promises';
import path from 'path';
import { AmplifyPrompter } from '@aws-amplify/cli-core';
import { logger } from './logger.js';
/**
 * Returns the project root directory.
 */
export const getProjectRoot = async () => {
    const useDefault = process.env.npm_config_yes === 'true';
    const defaultProjectRoot = '.';
    let projectRoot = useDefault
        ? defaultProjectRoot
        : await AmplifyPrompter.input({
            message: 'Where should we create your project?',
            defaultValue: defaultProjectRoot,
        });
    projectRoot = path.isAbsolute(projectRoot)
        ? projectRoot
        : path.resolve(process.cwd(), projectRoot);
    const isExistProjectRoot = await fsp
        .stat(projectRoot)
        .then(() => true)
        .catch(() => false); // There's no `fsp.exists` method, so we use `stat` instead. See https://github.com/nodejs/node/issues/39960#issuecomment-909444667
    if (!isExistProjectRoot) {
        logger.debug(`The provided directory (${projectRoot}) does not exist.`);
        logger.debug(`Creating directory ${projectRoot}`);
        await fsp.mkdir(projectRoot, { recursive: true });
    }
    return projectRoot;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0X3Byb2plY3Rfcm9vdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9nZXRfcHJvamVjdF9yb290LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sR0FBRyxNQUFNLGFBQWEsQ0FBQztBQUM5QixPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFckM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsS0FBSyxJQUFJLEVBQUU7SUFDdkMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEtBQUssTUFBTSxDQUFDO0lBQ3pELE1BQU0sa0JBQWtCLEdBQUcsR0FBRyxDQUFDO0lBQy9CLElBQUksV0FBVyxHQUFXLFVBQVU7UUFDbEMsQ0FBQyxDQUFDLGtCQUFrQjtRQUNwQixDQUFDLENBQUMsTUFBTSxlQUFlLENBQUMsS0FBSyxDQUFDO1lBQzFCLE9BQU8sRUFBRSxzQ0FBc0M7WUFDL0MsWUFBWSxFQUFFLGtCQUFrQjtTQUNqQyxDQUFDLENBQUM7SUFFUCxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUM7UUFDeEMsQ0FBQyxDQUFDLFdBQVc7UUFDYixDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFFN0MsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLEdBQUc7U0FDakMsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUNqQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO1NBQ2hCLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLG1JQUFtSTtJQUMxSixJQUFJLENBQUMsa0JBQWtCLEVBQUU7UUFDdkIsTUFBTSxDQUFDLEtBQUssQ0FBQywyQkFBMkIsV0FBVyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sQ0FBQyxLQUFLLENBQUMsc0JBQXNCLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDbEQsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0tBQ25EO0lBQ0QsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzcCBmcm9tICdmcy9wcm9taXNlcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IEFtcGxpZnlQcm9tcHRlciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9jbGktY29yZSc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5qcyc7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgcHJvamVjdCByb290IGRpcmVjdG9yeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFByb2plY3RSb290ID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCB1c2VEZWZhdWx0ID0gcHJvY2Vzcy5lbnYubnBtX2NvbmZpZ195ZXMgPT09ICd0cnVlJztcbiAgY29uc3QgZGVmYXVsdFByb2plY3RSb290ID0gJy4nO1xuICBsZXQgcHJvamVjdFJvb3Q6IHN0cmluZyA9IHVzZURlZmF1bHRcbiAgICA/IGRlZmF1bHRQcm9qZWN0Um9vdFxuICAgIDogYXdhaXQgQW1wbGlmeVByb21wdGVyLmlucHV0KHtcbiAgICAgICAgbWVzc2FnZTogJ1doZXJlIHNob3VsZCB3ZSBjcmVhdGUgeW91ciBwcm9qZWN0PycsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZGVmYXVsdFByb2plY3RSb290LFxuICAgICAgfSk7XG5cbiAgcHJvamVjdFJvb3QgPSBwYXRoLmlzQWJzb2x1dGUocHJvamVjdFJvb3QpXG4gICAgPyBwcm9qZWN0Um9vdFxuICAgIDogcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksIHByb2plY3RSb290KTtcblxuICBjb25zdCBpc0V4aXN0UHJvamVjdFJvb3QgPSBhd2FpdCBmc3BcbiAgICAuc3RhdChwcm9qZWN0Um9vdClcbiAgICAudGhlbigoKSA9PiB0cnVlKVxuICAgIC5jYXRjaCgoKSA9PiBmYWxzZSk7IC8vIFRoZXJlJ3Mgbm8gYGZzcC5leGlzdHNgIG1ldGhvZCwgc28gd2UgdXNlIGBzdGF0YCBpbnN0ZWFkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy8zOTk2MCNpc3N1ZWNvbW1lbnQtOTA5NDQ0NjY3XG4gIGlmICghaXNFeGlzdFByb2plY3RSb290KSB7XG4gICAgbG9nZ2VyLmRlYnVnKGBUaGUgcHJvdmlkZWQgZGlyZWN0b3J5ICgke3Byb2plY3RSb290fSkgZG9lcyBub3QgZXhpc3QuYCk7XG4gICAgbG9nZ2VyLmRlYnVnKGBDcmVhdGluZyBkaXJlY3RvcnkgJHtwcm9qZWN0Um9vdH1gKTtcbiAgICBhd2FpdCBmc3AubWtkaXIocHJvamVjdFJvb3QsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICB9XG4gIHJldHVybiBwcm9qZWN0Um9vdDtcbn07XG4iXX0=